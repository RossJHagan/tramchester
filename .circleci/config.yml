# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk-browsers
        environment:
          AWS_REGION: eu-west-1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # run unit tests
      - run:
          command: gradle ci_unit
          name: ci_unit
          environment:
            SERVER_URL: https://alpha.tramchester.com
            ENV: Dev
      - run:
          command: gradle integration
          name: integration
      - run:
          command: gradle upload
          name: upload
      - run:
          name: deployDev
          command: gradle deploy updateLB tidy
          environment:
            ENV: Dev
      - run:
          name: acceptance
          command: |
            mkdir -p ~/drivers
            wget -N https://github.com/mozilla/geckodriver/releases/download/v0.20.0/geckodriver-v0.20.0-linux64.tar.gz -P ~/drivers
            tar xvzf ~/drivers/geckodriver-v0.20.0-linux64.tar.gz -C ~/drivers
            sudo cp ~/drivers/geckodriver /usr/local/bin/
            sudo apt-get remove firefox-mozilla-build &&
            sudo apt install firefox-esr &&
            firefox --version
            gradle appium
          environment:
            SERVER_URL: https://alpha.tramchester.com
      - store_test_results:
          path: ~/repo/build/test-results
      - store_artifacts:
          path: ~/repo/build/reports/tests
